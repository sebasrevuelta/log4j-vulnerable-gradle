/*
 * Minimal project to reproduce the dependency scan failure on Gradle 8.x
 * (LazyPublishArtifact constructor mismatch).
 */

buildscript {
    repositories {
        // jcenter() is EOL; leave it only if you need to mimic your exact env
        jcenter()
        google()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

group = 'log4j'
version = '1.0'
description = 'log4j-vulnerable'

// Compile to Java 8; note: Gradle 8.x itself must run on JDK 17+
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    // Prefer mavenCentral; keeping jcenter entries if you want parity with your original file
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url = uri('https://jcenter.bintray.com') }
}

configurations {
    // Extra resolvable configuration so scanners resolve "more stuff"
    scanOnly {
        canBeConsumed = false
        canBeResolved = true
        description = 'Configuration used to help reproduce dependency-graph scans.'
    }
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.12.2'

    // Something lightweight to resolve under the extra configuration
    scanOnly 'com.squareup.okio:okio:3.9.0'

    testImplementation 'junit:junit:4.13.2'
}

artifacts {
    // Expose the jar as a Provider-backed outgoing artifact (the bit many scanners wrap)
    add('scanOnly', tasks.named('jar').flatMap { it.archiveFile })
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencyLocking {
    // If this causes “no lock state” errors in your CI, temporarily comment this out
    // or run `./gradlew --write-locks` once to generate lockfiles.
    lockAllConfigurations()
}

sourceCompatibility = '1.8'
